# HELK DNS Response Name enrichments and additions
# HELK build Stage: Alpha
# Author: Nate Guagenti (@neu5ron)
# License: GPL-3.0
filter {
  # Add some additional data and parsing/normilzation for dns response/answer
  if [dns_response_name] {
      
    # Hash DNS Response/Answer for easier/more efficient whitelisting/etc
    fingerprint {
      source => [ "dns_response_name" ]
      concatenate_sources => true
      method => "MURMUR3"
      target => "fingerprint_dns_response_name_mm3"
      add_field => { "etl_pipeline" => "fingerprint-dns_resposne_name" }
      id => "fingerprint-8813-001"
    }
    ruby {
      code => "
        response = event.get('dns_resposne_name')

        # Is an array
        if response.is_a? Enumerable
          # The total number of responses
          total_responses = response.length
          # The total length of all responses/answers combined if array
          total_length = response.join('').length
          # Remove duplicate responses
          response = response.uniq

          all_response_has_non_ascii = Array.new
          # all_response_length = Array.new

          for r in response
              all_response_has_non_ascii.push(false === r.ascii_only?)
              # all_response_length.push(r.length)
          end

          # all_response_length = all_response_length.uniq

          all_response_has_non_ascii = all_response_has_non_ascii.include?(true)

          #TODO:eventually renable?#event.set('dns_resposne_name', response)
          #TODO:eventually renable?make name match/add OSSEM if so#event.set('dns_response_all_length', all_response_length)

        # Not an array
        else
          # The total number of responses
          total_responses = 1
          # The total length of all responses/answers combined if array
          total_length = response.length
          all_response_has_non_ascii = false === response.ascii_only?
        end

        # Set variables that are in both array or non array
        event.set('meta_dns_response_name_has_non_ascii', all_response_has_non_ascii)
        event.set('meta_dns_response_name_length', total_length)
        event.set('meta_dns_response_name_count', total_responses)
        
      "
      add_field => { "etl_pipeline" => "dns_response_name-enrich_and_add" }
      tag_on_exception =>  "_rubyexception-dns_response_name-enrich_and_add"
    }
  }
}