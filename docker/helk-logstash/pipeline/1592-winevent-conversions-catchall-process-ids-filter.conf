# HELK process-ids catchall conversion filter conf
# HELK build Stage: Alpha
# Author: Nate Guagenti (@neu5ron), Roberto Rodriguez (@Cyb3rWard0g)
# License: GPL-3.0

filter {
  if [event_id] {

    if [process_id] {
      ruby {
        path => "/usr/share/logstash/pipeline/ruby/id_hex2dec.rb"
        script_params => { "pid" => "process_id" }
        tag_on_exception =>  "_rubyexception-process_id-hex2dec"
        add_field => { "etl_pipeline" => "process_id-hex2dec" }
      }
    }
    if [process_parent_id] {
      ruby {
        path => "/usr/share/logstash/pipeline/ruby/id_hex2dec.rb"
        script_params => { "pid" => "process_parent_id" }
        tag_on_exception =>  "_rubyexception-process_parent_id-hex2dec"
        add_field => { "etl_pipeline" => "process_parent_id-hex2dec" }
      }
    }
    if [target_process_id] {
      ruby {
        path => "/usr/share/logstash/pipeline/ruby/id_hex2dec.rb"
        script_params => { "pid" => "target_process_id" }
        tag_on_exception =>  "_rubyexception-target_process_id-hex2dec"
        add_field => { "etl_pipeline" => "target_process_id-hex2dec" }
      }
    }
    if [process_granted_access] {
      ruby {
        path => "/usr/share/logstash/pipeline/ruby/id_hex2dec.rb"
        script_params => { "pid" => "process_granted_access" }
        tag_on_exception =>  "_rubyexception-process_granted_access-hex2dec"
        add_field => { "etl_pipeline" => "process_granted_access-hex2dec" }
      }
    }
    if [process_parent_id] {
      ruby {
        path => "/usr/share/logstash/pipeline/ruby/id_hex2dec.rb"
        script_params => { "pid" => "process_parent_id" }
        tag_on_exception =>  "_rubyexception-process_parent_id-hex2dec"
        add_field => { "etl_pipeline" => "process_parent_id-hex2dec" }
      }
    }

    # Rest of previous process fields if they weren't renamed, then we still want to convert to decimal
    if [ProcessId] {
      ruby {
        path => "/usr/share/logstash/pipeline/ruby/id_hex2dec.rb"
        script_params => { "pid" => "ProcessId" }
        tag_on_exception =>  "_rubyexception-ProcessId-hex2dec"
        add_field => { "etl_pipeline" => "ProcessId-hex2dec" }
      }
    }
    if [NewProcessId] {
      ruby {
        path => "/usr/share/logstash/pipeline/ruby/id_hex2dec.rb"
        script_params => { "pid" => "NewProcessId" }
        tag_on_exception =>  "_rubyexception-NewProcessId-hex2dec"
        add_field => { "etl_pipeline" => "NewProcessId-hex2dec" }
      }
    }
    if [SourceProcessId] {
      ruby {
        path => "/usr/share/logstash/pipeline/ruby/id_hex2dec.rb"
        script_params => { "pid" => "SourceProcessId" }
        tag_on_exception =>  "_rubyexception-SourceProcessId-hex2dec"
        add_field => { "etl_pipeline" => "SourceProcessId-hex2dec" }
      }
    }
    if [ParentProcessId] {
      ruby {
        path => "/usr/share/logstash/pipeline/ruby/id_hex2dec.rb"
        script_params => { "pid" => "ParentProcessId" }
        tag_on_exception =>  "_rubyexception-ParentProcessId-hex2dec"
        add_field => { "etl_pipeline" => "ParentProcessId-hex2dec" }
      }
    }
    if [TargetProcessId]{
      ruby {
        path => "/usr/share/logstash/pipeline/ruby/id_hex2dec.rb"
        script_params => { "pid" => "TargetProcessId" }
        tag_on_exception =>  "_rubyexception-TargetProcessId-hex2dec"
        add_field => { "etl_pipeline" => "TargetProcessId-hex2dec" }
      }
    }

  }
}
